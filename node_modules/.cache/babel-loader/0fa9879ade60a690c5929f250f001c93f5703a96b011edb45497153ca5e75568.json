{"ast":null,"code":"var _jsxFileName = \"/Users/mateuszmatyja/WeatherFrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WeatherTable from './components/WeatherTable';\nimport MapView from './components/MapView';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const [inputCoordinates, setInputCoordinates] = useState({\n    lat: '',\n    lng: ''\n  });\n  const [darkMode, setDarkMode] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    document.body.className = darkMode ? 'dark-mode' : 'light-mode';\n    console.log('Backend URL:', process.env.REACT_APP_BACKEND_URL); // Sprawdź, czy zmienna jest poprawnie załadowana\n  }, [darkMode]);\n  const fetchWeather = () => {\n    if (inputCoordinates.lat && inputCoordinates.lng) {\n      axios.get(`https://weatherforecast-backend.onrender.com/?latitude=${inputCoordinates.lat}&longitude=${inputCoordinates.lng}`).then(response => setWeatherData(response.data)).catch(error => console.error('Error fetching weather data:', error));\n    }\n  };\n  useEffect(() => {\n    if (inputCoordinates.lat && inputCoordinates.lng) {\n      fetchWeather();\n    }\n  }, [inputCoordinates]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateCoordinates()) {\n      fetchWeather();\n    } else {\n      setError('Please enter valid latitude and longitude values.');\n    }\n  };\n  const handleInputChange = (e, type) => {\n    const {\n      value\n    } = e.target;\n    const numValue = value === '' ? '' : parseFloat(value);\n    if (!isNaN(numValue) || value === '') {\n      setInputCoordinates(prev => ({\n        ...prev,\n        [type]: numValue\n      }));\n    }\n  };\n  const validateCoordinates = () => {\n    return inputCoordinates.lat >= -90 && inputCoordinates.lat <= 90 && inputCoordinates.lng >= -180 && inputCoordinates.lng <= 180;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [\"Weather Forecast\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setDarkMode(!darkMode),\n        children: \"Toggle Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapView, {\n      onCoordinatesChange: setInputCoordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: inputCoordinates.lat === '' ? '' : inputCoordinates.lat,\n        onChange: e => handleInputChange(e, 'lat'),\n        placeholder: \"Enter latitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: inputCoordinates.lng === '' ? '' : inputCoordinates.lng,\n        onChange: e => handleInputChange(e, 'lng'),\n        placeholder: \"Enter longitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherTable, {\n      coordinates: inputCoordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q9xXGVVvZUKubxnmpdkqdfdkYfc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WeatherTable","MapView","axios","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","inputCoordinates","setInputCoordinates","lat","lng","darkMode","setDarkMode","error","setError","document","body","className","console","log","process","env","REACT_APP_BACKEND_URL","fetchWeather","get","then","response","data","catch","handleSubmit","e","preventDefault","validateCoordinates","handleInputChange","type","value","target","numValue","parseFloat","isNaN","prev","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onCoordinatesChange","onSubmit","onChange","placeholder","coordinates","_c","$RefreshReg$"],"sources":["/Users/mateuszmatyja/WeatherFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WeatherTable from './components/WeatherTable';\nimport MapView from './components/MapView';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState([]);\n  const [inputCoordinates, setInputCoordinates] = useState({ lat: '', lng: '' });\n  const [darkMode, setDarkMode] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    document.body.className = darkMode ? 'dark-mode' : 'light-mode';\n    console.log('Backend URL:', process.env.REACT_APP_BACKEND_URL); // Sprawdź, czy zmienna jest poprawnie załadowana\n  }, [darkMode]);\n\n  const fetchWeather = () => {\n    if (inputCoordinates.lat && inputCoordinates.lng) {\n      axios.get(`https://weatherforecast-backend.onrender.com/?latitude=${inputCoordinates.lat}&longitude=${inputCoordinates.lng}`)\n        .then(response => setWeatherData(response.data))\n        .catch(error => console.error('Error fetching weather data:', error));\n    }\n  };\n\n\n  useEffect(() => {\n    if (inputCoordinates.lat && inputCoordinates.lng) {\n      fetchWeather();\n    }\n  }, [inputCoordinates]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateCoordinates()) {\n      fetchWeather();\n    } else {\n      setError('Please enter valid latitude and longitude values.');\n    }\n  };\n\n  const handleInputChange = (e, type) => {\n    const { value } = e.target;\n    const numValue = value === '' ? '' : parseFloat(value);\n    if (!isNaN(numValue) || value === '') {\n      setInputCoordinates(prev => ({\n        ...prev,\n        [type]: numValue\n      }));\n    }\n  };\n\n  const validateCoordinates = () => {\n    return (\n      inputCoordinates.lat >= -90 && inputCoordinates.lat <= 90 &&\n      inputCoordinates.lng >= -180 && inputCoordinates.lng <= 180\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Weather Forecast\n        <button onClick={() => setDarkMode(!darkMode)}>Toggle Dark Mode</button>\n      </header>\n      <MapView onCoordinatesChange={setInputCoordinates} />\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          value={inputCoordinates.lat === '' ? '' : inputCoordinates.lat}\n          onChange={e => handleInputChange(e, 'lat')}\n          placeholder=\"Enter latitude\"\n        />\n        <input\n          type=\"number\"\n          value={inputCoordinates.lng === '' ? '' : inputCoordinates.lng}\n          onChange={e => handleInputChange(e, 'lng')}\n          placeholder=\"Enter longitude\"\n        />\n        <button type=\"submit\">Get Weather</button>\n      </form>\n      <WeatherTable coordinates={inputCoordinates} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}