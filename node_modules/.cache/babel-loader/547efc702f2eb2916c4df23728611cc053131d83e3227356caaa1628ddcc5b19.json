{"ast":null,"code":"'use strict';var utils=require('./../utils');function InterceptorManager(){this.handlers=[];}/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */InterceptorManager.prototype.use=function use(fulfilled,rejected,options){this.handlers.push({fulfilled:fulfilled,rejected:rejected,synchronous:options?options.synchronous:false,runWhen:options?options.runWhen:null});return this.handlers.length-1;};/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */InterceptorManager.prototype.eject=function eject(id){if(this.handlers[id]){this.handlers[id]=null;}};/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */InterceptorManager.prototype.forEach=function forEach(fn){utils.forEach(this.handlers,function forEachHandler(h){if(h!==null){fn(h);}});};module.exports=InterceptorManager;","map":{"version":3,"names":["utils","require","InterceptorManager","handlers","prototype","use","fulfilled","rejected","options","push","synchronous","runWhen","length","eject","id","forEach","fn","forEachHandler","h","module","exports"],"sources":["/Users/mateuszmatyja/WeatherFrontend/src/node_modules/axios/lib/core/InterceptorManager.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n"],"mappings":"AAAA,YAAY,CAEZ,GAAI,CAAAA,KAAK,CAAGC,OAAO,CAAC,YAAY,CAAC,CAEjC,QAAS,CAAAC,kBAAkBA,CAAA,CAAG,CAC5B,IAAI,CAACC,QAAQ,CAAG,EAAE,CACpB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAD,kBAAkB,CAACE,SAAS,CAACC,GAAG,CAAG,QAAS,CAAAA,GAAGA,CAACC,SAAS,CAAEC,QAAQ,CAAEC,OAAO,CAAE,CAC5E,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,CACjBH,SAAS,CAAEA,SAAS,CACpBC,QAAQ,CAAEA,QAAQ,CAClBG,WAAW,CAAEF,OAAO,CAAGA,OAAO,CAACE,WAAW,CAAG,KAAK,CAClDC,OAAO,CAAEH,OAAO,CAAGA,OAAO,CAACG,OAAO,CAAG,IACvC,CAAC,CAAC,CACF,MAAO,KAAI,CAACR,QAAQ,CAACS,MAAM,CAAG,CAAC,CACjC,CAAC,CAED;AACA;AACA;AACA;AACA,GACAV,kBAAkB,CAACE,SAAS,CAACS,KAAK,CAAG,QAAS,CAAAA,KAAKA,CAACC,EAAE,CAAE,CACtD,GAAI,IAAI,CAACX,QAAQ,CAACW,EAAE,CAAC,CAAE,CACrB,IAAI,CAACX,QAAQ,CAACW,EAAE,CAAC,CAAG,IAAI,CAC1B,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAZ,kBAAkB,CAACE,SAAS,CAACW,OAAO,CAAG,QAAS,CAAAA,OAAOA,CAACC,EAAE,CAAE,CAC1DhB,KAAK,CAACe,OAAO,CAAC,IAAI,CAACZ,QAAQ,CAAE,QAAS,CAAAc,cAAcA,CAACC,CAAC,CAAE,CACtD,GAAIA,CAAC,GAAK,IAAI,CAAE,CACdF,EAAE,CAACE,CAAC,CAAC,CACP,CACF,CAAC,CAAC,CACJ,CAAC,CAEDC,MAAM,CAACC,OAAO,CAAGlB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}