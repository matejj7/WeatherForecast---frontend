{"ast":null,"code":"import{createElementObject,createPathComponent,extendContext}from'@react-leaflet/core';import{Polygon as LeafletPolygon}from'leaflet';export const Polygon=createPathComponent(function createPolygon(_ref,ctx){let{positions,...options}=_ref;const polygon=new LeafletPolygon(positions,options);return createElementObject(polygon,extendContext(ctx,{overlayContainer:polygon}));},function updatePolygon(layer,props,prevProps){if(props.positions!==prevProps.positions){layer.setLatLngs(props.positions);}});","map":{"version":3,"names":["createElementObject","createPathComponent","extendContext","Polygon","LeafletPolygon","createPolygon","_ref","ctx","positions","options","polygon","overlayContainer","updatePolygon","layer","props","prevProps","setLatLngs"],"sources":["/Users/mateuszmatyja/WeatherFrontend/src/node_modules/react-leaflet/lib/Polygon.js"],"sourcesContent":["import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { Polygon as LeafletPolygon } from 'leaflet';\nexport const Polygon = createPathComponent(function createPolygon({ positions , ...options }, ctx) {\n    const polygon = new LeafletPolygon(positions, options);\n    return createElementObject(polygon, extendContext(ctx, {\n        overlayContainer: polygon\n    }));\n}, function updatePolygon(layer, props, prevProps) {\n    if (props.positions !== prevProps.positions) {\n        layer.setLatLngs(props.positions);\n    }\n});\n"],"mappings":"AAAA,OAASA,mBAAmB,CAAEC,mBAAmB,CAAEC,aAAa,KAAQ,qBAAqB,CAC7F,OAASC,OAAO,GAAI,CAAAC,cAAc,KAAQ,SAAS,CACnD,MAAO,MAAM,CAAAD,OAAO,CAAGF,mBAAmB,CAAC,QAAS,CAAAI,aAAaA,CAAAC,IAAA,CAA6BC,GAAG,CAAE,IAAjC,CAAEC,SAAS,CAAG,GAAGC,OAAQ,CAAC,CAAAH,IAAA,CACxF,KAAM,CAAAI,OAAO,CAAG,GAAI,CAAAN,cAAc,CAACI,SAAS,CAAEC,OAAO,CAAC,CACtD,MAAO,CAAAT,mBAAmB,CAACU,OAAO,CAAER,aAAa,CAACK,GAAG,CAAE,CACnDI,gBAAgB,CAAED,OACtB,CAAC,CAAC,CAAC,CACP,CAAC,CAAE,QAAS,CAAAE,aAAaA,CAACC,KAAK,CAAEC,KAAK,CAAEC,SAAS,CAAE,CAC/C,GAAID,KAAK,CAACN,SAAS,GAAKO,SAAS,CAACP,SAAS,CAAE,CACzCK,KAAK,CAACG,UAAU,CAACF,KAAK,CAACN,SAAS,CAAC,CACrC,CACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}