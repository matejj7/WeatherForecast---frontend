{"ast":null,"code":"import React,{useState,useEffect}from'react';import WeatherTable from'./components/WeatherTable';import MapView from'./components/MapView';import'./App.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[weatherData,setWeatherData]=useState([]);const[inputCoordinates,setInputCoordinates]=useState({lat:'',lng:''});const[darkMode,setDarkMode]=useState(false);const[error,setError]=useState('');useEffect(()=>{document.body.className=darkMode?'dark-mode':'light-mode';console.log('Backend URL:',process.env.REACT_APP_BACKEND_URL);// Sprawdź, czy zmienna jest poprawnie załadowana\n},[darkMode]);const fetchWeather=()=>{if(inputCoordinates.lat&&inputCoordinates.lng){axios.get(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/?latitude=\").concat(inputCoordinates.lat,\"&longitude=\").concat(inputCoordinates.lng)).then(response=>setWeatherData(response.data)).catch(error=>console.error('Error fetching weather data:',error));}};useEffect(()=>{if(inputCoordinates.lat&&inputCoordinates.lng){fetchWeather();}},[inputCoordinates]);const handleSubmit=e=>{e.preventDefault();if(validateCoordinates()){fetchWeather();}else{setError('Please enter valid latitude and longitude values.');}};const handleInputChange=(e,type)=>{const{value}=e.target;const numValue=value===''?'':parseFloat(value);if(!isNaN(numValue)||value===''){setInputCoordinates(prev=>({...prev,[type]:numValue}));}};const validateCoordinates=()=>{return inputCoordinates.lat>=-90&&inputCoordinates.lat<=90&&inputCoordinates.lng>=-180&&inputCoordinates.lng<=180;};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[\"Weather Forecast\",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDarkMode(!darkMode),children:\"Toggle Dark Mode\"})]}),/*#__PURE__*/_jsx(MapView,{onCoordinatesChange:setInputCoordinates}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:inputCoordinates.lat===''?'':inputCoordinates.lat,onChange:e=>handleInputChange(e,'lat'),placeholder:\"Enter latitude\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:inputCoordinates.lng===''?'':inputCoordinates.lng,onChange:e=>handleInputChange(e,'lng'),placeholder:\"Enter longitude\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Get Weather\"})]}),/*#__PURE__*/_jsx(WeatherTable,{coordinates:inputCoordinates})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","WeatherTable","MapView","axios","jsx","_jsx","jsxs","_jsxs","App","weatherData","setWeatherData","inputCoordinates","setInputCoordinates","lat","lng","darkMode","setDarkMode","error","setError","document","body","className","console","log","process","env","REACT_APP_BACKEND_URL","fetchWeather","get","concat","then","response","data","catch","handleSubmit","e","preventDefault","validateCoordinates","handleInputChange","type","value","target","numValue","parseFloat","isNaN","prev","children","onClick","onCoordinatesChange","onSubmit","onChange","placeholder","coordinates"],"sources":["/Users/mateuszmatyja/WeatherFrontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport WeatherTable from './components/WeatherTable';\nimport MapView from './components/MapView';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState([]);\n  const [inputCoordinates, setInputCoordinates] = useState({ lat: '', lng: '' });\n  const [darkMode, setDarkMode] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    document.body.className = darkMode ? 'dark-mode' : 'light-mode';\n    console.log('Backend URL:', process.env.REACT_APP_BACKEND_URL); // Sprawdź, czy zmienna jest poprawnie załadowana\n  }, [darkMode]);\n\n  const fetchWeather = () => {\n    if (inputCoordinates.lat && inputCoordinates.lng) {\n      axios.get(`${process.env.REACT_APP_BACKEND_URL}/?latitude=${inputCoordinates.lat}&longitude=${inputCoordinates.lng}`)\n        .then(response => setWeatherData(response.data))\n        .catch(error => console.error('Error fetching weather data:', error));\n    }\n  };\n\n  useEffect(() => {\n    if (inputCoordinates.lat && inputCoordinates.lng) {\n      fetchWeather();\n    }\n  }, [inputCoordinates]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateCoordinates()) {\n      fetchWeather();\n    } else {\n      setError('Please enter valid latitude and longitude values.');\n    }\n  };\n\n  const handleInputChange = (e, type) => {\n    const { value } = e.target;\n    const numValue = value === '' ? '' : parseFloat(value);\n    if (!isNaN(numValue) || value === '') {\n      setInputCoordinates(prev => ({\n        ...prev,\n        [type]: numValue\n      }));\n    }\n  };\n\n  const validateCoordinates = () => {\n    return (\n      inputCoordinates.lat >= -90 && inputCoordinates.lat <= 90 &&\n      inputCoordinates.lng >= -180 && inputCoordinates.lng <= 180\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Weather Forecast\n        <button onClick={() => setDarkMode(!darkMode)}>Toggle Dark Mode</button>\n      </header>\n      <MapView onCoordinatesChange={setInputCoordinates} />\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          value={inputCoordinates.lat === '' ? '' : inputCoordinates.lat}\n          onChange={e => handleInputChange(e, 'lat')}\n          placeholder=\"Enter latitude\"\n        />\n        <input\n          type=\"number\"\n          value={inputCoordinates.lng === '' ? '' : inputCoordinates.lng}\n          onChange={e => handleInputChange(e, 'lng')}\n          placeholder=\"Enter longitude\"\n        />\n        <button type=\"submit\">Get Weather</button>\n      </form>\n      <WeatherTable coordinates={inputCoordinates} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}