{"ast":null,"code":"var _jsxFileName = \"/Users/mateuszmatyja/WeatherFrontend/src/components/WeatherTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WeatherIcon from './WeatherIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherTable({\n  coordinates\n}) {\n  _s();\n  const [weatherData, setWeatherData] = useState([]);\n  const fetchWeather = () => {\n    if (coordinates && coordinates.lat && coordinates.lng) {\n      axios.get(`${process.env.REACT_APP_BACKEND_URL}/?latitude=${coordinates.lat}&longitude=${coordinates.lng}`).then(response => setWeatherData(response.data)).catch(error => console.error('Error fetching weather data:', error));\n    }\n  };\n  useEffect(() => {\n    fetchWeather();\n  }, [coordinates]); // Re-fetch whenever coordinates change\n\n  if (!coordinates) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading coordinates...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weather Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Max Temp (\\xB0C)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Min Temp (\\xB0C)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Estimated Energy (kWh)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: weatherData.map((day, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: day.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(WeatherIcon, {\n              code: day.weatherCode.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: day.tempMax\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: day.tempMin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: day.estimatedEnergy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherTable, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n_c = WeatherTable;\nexport default WeatherTable;\nvar _c;\n$RefreshReg$(_c, \"WeatherTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","WeatherIcon","jsxDEV","_jsxDEV","WeatherTable","coordinates","_s","weatherData","setWeatherData","fetchWeather","lat","lng","get","process","env","REACT_APP_BACKEND_URL","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","day","index","date","code","weatherCode","toString","tempMax","tempMin","estimatedEnergy","_c","$RefreshReg$"],"sources":["/Users/mateuszmatyja/WeatherFrontend/src/components/WeatherTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WeatherIcon from './WeatherIcon';\n\nfunction WeatherTable({ coordinates }) {\n  const [weatherData, setWeatherData] = useState([]);\n\n  const fetchWeather = () => {\n    if (coordinates && coordinates.lat && coordinates.lng) {\n      axios.get(`${process.env.REACT_APP_BACKEND_URL}/?latitude=${coordinates.lat}&longitude=${coordinates.lng}`)\n        .then(response => setWeatherData(response.data))\n        .catch(error => console.error('Error fetching weather data:', error));\n    }\n  };\n\n  useEffect(() => {\n    fetchWeather();\n  }, [coordinates]); // Re-fetch whenever coordinates change\n\n  if (!coordinates) {\n    return <p>Loading coordinates...</p>;\n  }\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Weather Icon</th>\n            <th>Max Temp (°C)</th>\n            <th>Min Temp (°C)</th>\n            <th>Estimated Energy (kWh)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {weatherData.map((day, index) => (\n            <tr key={index}>\n              <td>{day.date}</td>\n              <td><WeatherIcon code={day.weatherCode.toString()} /></td>\n              <td>{day.tempMax}</td>\n              <td>{day.tempMin}</td>\n              <td>{day.estimatedEnergy}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default WeatherTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}