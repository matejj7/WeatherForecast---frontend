{"ast":null,"code":"'use strict';/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */module.exports=function spread(callback){return function wrap(arr){return callback.apply(null,arr);};};","map":{"version":3,"names":["module","exports","spread","callback","wrap","arr","apply"],"sources":["/Users/mateuszmatyja/WeatherFrontend/src/node_modules/axios/lib/helpers/spread.js"],"sourcesContent":["'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n"],"mappings":"AAAA,YAAY,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAA,MAAM,CAACC,OAAO,CAAG,QAAS,CAAAC,MAAMA,CAACC,QAAQ,CAAE,CACzC,MAAO,SAAS,CAAAC,IAAIA,CAACC,GAAG,CAAE,CACxB,MAAO,CAAAF,QAAQ,CAACG,KAAK,CAAC,IAAI,CAAED,GAAG,CAAC,CAClC,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}