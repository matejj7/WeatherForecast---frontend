{"ast":null,"code":"'use strict';var utils=require('./../utils');module.exports=utils.isStandardBrowserEnv()?// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv(){var msie=/(msie|trident)/i.test(navigator.userAgent);var urlParsingNode=document.createElement('a');var originURL;/**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */function resolveURL(url){var href=url;if(msie){// IE needs attribute set twice to normalize properties\nurlParsingNode.setAttribute('href',href);href=urlParsingNode.href;}urlParsingNode.setAttribute('href',href);// urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\nreturn{href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,''):'',host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\\?/,''):'',hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,''):'',hostname:urlParsingNode.hostname,port:urlParsingNode.port,pathname:urlParsingNode.pathname.charAt(0)==='/'?urlParsingNode.pathname:'/'+urlParsingNode.pathname};}originURL=resolveURL(window.location.href);/**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */return function isURLSameOrigin(requestURL){var parsed=utils.isString(requestURL)?resolveURL(requestURL):requestURL;return parsed.protocol===originURL.protocol&&parsed.host===originURL.host;};}():// Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv(){return function isURLSameOrigin(){return true;};}();","map":{"version":3,"names":["utils","require","module","exports","isStandardBrowserEnv","standardBrowserEnv","msie","test","navigator","userAgent","urlParsingNode","document","createElement","originURL","resolveURL","url","href","setAttribute","protocol","replace","host","search","hash","hostname","port","pathname","charAt","window","location","isURLSameOrigin","requestURL","parsed","isString","nonStandardBrowserEnv"],"sources":["/Users/mateuszmatyja/WeatherFrontend/src/node_modules/axios/lib/helpers/isURLSameOrigin.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n"],"mappings":"AAAA,YAAY,CAEZ,GAAI,CAAAA,KAAK,CAAGC,OAAO,CAAC,YAAY,CAAC,CAEjCC,MAAM,CAACC,OAAO,CACZH,KAAK,CAACI,oBAAoB,CAAC,CAAC,CAE5B;AACA;AACG,QAAS,CAAAC,kBAAkBA,CAAA,CAAG,CAC7B,GAAI,CAAAC,IAAI,CAAG,iBAAiB,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC,CACtD,GAAI,CAAAC,cAAc,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CAChD,GAAI,CAAAC,SAAS,CAEb;AACN;AACA;AACA;AACA;AACA,MACM,QAAS,CAAAC,UAAUA,CAACC,GAAG,CAAE,CACvB,GAAI,CAAAC,IAAI,CAAGD,GAAG,CAEd,GAAIT,IAAI,CAAE,CACV;AACEI,cAAc,CAACO,YAAY,CAAC,MAAM,CAAED,IAAI,CAAC,CACzCA,IAAI,CAAGN,cAAc,CAACM,IAAI,CAC5B,CAEAN,cAAc,CAACO,YAAY,CAAC,MAAM,CAAED,IAAI,CAAC,CAEzC;AACA,MAAO,CACLA,IAAI,CAAEN,cAAc,CAACM,IAAI,CACzBE,QAAQ,CAAER,cAAc,CAACQ,QAAQ,CAAGR,cAAc,CAACQ,QAAQ,CAACC,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAG,EAAE,CAClFC,IAAI,CAAEV,cAAc,CAACU,IAAI,CACzBC,MAAM,CAAEX,cAAc,CAACW,MAAM,CAAGX,cAAc,CAACW,MAAM,CAACF,OAAO,CAAC,KAAK,CAAE,EAAE,CAAC,CAAG,EAAE,CAC7EG,IAAI,CAAEZ,cAAc,CAACY,IAAI,CAAGZ,cAAc,CAACY,IAAI,CAACH,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAAG,EAAE,CACtEI,QAAQ,CAAEb,cAAc,CAACa,QAAQ,CACjCC,IAAI,CAAEd,cAAc,CAACc,IAAI,CACzBC,QAAQ,CAAGf,cAAc,CAACe,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,GAAK,GAAG,CAClDhB,cAAc,CAACe,QAAQ,CACvB,GAAG,CAAGf,cAAc,CAACe,QACzB,CAAC,CACH,CAEAZ,SAAS,CAAGC,UAAU,CAACa,MAAM,CAACC,QAAQ,CAACZ,IAAI,CAAC,CAE5C;AACN;AACA;AACA;AACA;AACA,MACM,MAAO,SAAS,CAAAa,eAAeA,CAACC,UAAU,CAAE,CAC1C,GAAI,CAAAC,MAAM,CAAI/B,KAAK,CAACgC,QAAQ,CAACF,UAAU,CAAC,CAAIhB,UAAU,CAACgB,UAAU,CAAC,CAAGA,UAAU,CAC/E,MAAQ,CAAAC,MAAM,CAACb,QAAQ,GAAKL,SAAS,CAACK,QAAQ,EAC1Ca,MAAM,CAACX,IAAI,GAAKP,SAAS,CAACO,IAAI,CACpC,CAAC,CACH,CAAC,CAAE,CAAC,CAEN;AACG,QAAS,CAAAa,qBAAqBA,CAAA,CAAG,CAChC,MAAO,SAAS,CAAAJ,eAAeA,CAAA,CAAG,CAChC,MAAO,KAAI,CACb,CAAC,CACH,CAAC,CAAE,CACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}